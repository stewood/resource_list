# Generated by Django 5.0.2 on 2025-08-12 23:13

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("directory", "0001_initial"),
    ]

    operations = [
        migrations.RunSQL(
            # Create FTS5 virtual table
            sql="""
            CREATE VIRTUAL TABLE resource_fts USING fts5(
                resource_id UNINDEXED,
                name,
                description,
                city,
                state,
                category_name,
                source,
                content='directory_resource',
                content_rowid='id'
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS resource_fts;",
        ),
        migrations.RunSQL(
            # Create trigger to insert into FTS5 when resource is created
            sql="""
            CREATE TRIGGER resource_fts_insert AFTER INSERT ON directory_resource
            BEGIN
                INSERT INTO resource_fts(resource_id, name, description, city, state, category_name, source)
                VALUES (
                    NEW.id,
                    NEW.name,
                    NEW.description,
                    NEW.city,
                    NEW.state,
                    (SELECT name FROM directory_taxonomycategory WHERE id = NEW.category_id),
                    NEW.source
                );
            END;
            """,
            reverse_sql="DROP TRIGGER IF EXISTS resource_fts_insert;",
        ),
        migrations.RunSQL(
            # Create trigger to update FTS5 when resource is updated
            sql="""
            CREATE TRIGGER resource_fts_update AFTER UPDATE ON directory_resource
            BEGIN
                UPDATE resource_fts SET
                    name = NEW.name,
                    description = NEW.description,
                    city = NEW.city,
                    state = NEW.state,
                    category_name = (SELECT name FROM directory_taxonomycategory WHERE id = NEW.category_id),
                    source = NEW.source
                WHERE resource_id = NEW.id;
            END;
            """,
            reverse_sql="DROP TRIGGER IF EXISTS resource_fts_update;",
        ),
        migrations.RunSQL(
            # Create trigger to delete from FTS5 when resource is deleted
            sql="""
            CREATE TRIGGER resource_fts_delete AFTER DELETE ON directory_resource
            BEGIN
                DELETE FROM resource_fts WHERE resource_id = OLD.id;
            END;
            """,
            reverse_sql="DROP TRIGGER IF EXISTS resource_fts_delete;",
        ),
        migrations.RunSQL(
            # Populate FTS5 table with existing data
            sql="""
            INSERT INTO resource_fts(resource_id, name, description, city, state, category_name, source)
            SELECT 
                r.id,
                r.name,
                r.description,
                r.city,
                r.state,
                c.name as category_name,
                r.source
            FROM directory_resource r
            LEFT JOIN directory_taxonomycategory c ON r.category_id = c.id
            WHERE r.is_deleted = 0;
            """,
            reverse_sql="DELETE FROM resource_fts;",
        ),
    ]
