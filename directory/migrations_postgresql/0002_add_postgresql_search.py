# Generated by Django 5.0.2 on 2025-08-12 23:13

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("directory", "0001_initial"),
    ]

    operations = [
        # Add a search vector field to the Resource model
        migrations.RunSQL(
            sql="""
            ALTER TABLE directory_resource 
            ADD COLUMN search_vector tsvector;
            """,
            reverse_sql="""
            ALTER TABLE directory_resource 
            DROP COLUMN search_vector;
            """,
        ),
        
        # Create a GIN index for fast full-text search
        migrations.RunSQL(
            sql="""
            CREATE INDEX resource_search_vector_idx 
            ON directory_resource USING gin(search_vector);
            """,
            reverse_sql="""
            DROP INDEX IF EXISTS resource_search_vector_idx;
            """,
        ),
        
        # Create a function to update the search vector
        migrations.RunSQL(
            sql="""
            CREATE OR REPLACE FUNCTION resource_search_vector_update() RETURNS trigger AS $$
            BEGIN
                NEW.search_vector :=
                    setweight(to_tsvector('english', COALESCE(NEW.name, '')), 'A') ||
                    setweight(to_tsvector('english', COALESCE(NEW.description, '')), 'B') ||
                    setweight(to_tsvector('english', COALESCE(NEW.city, '')), 'C') ||
                    setweight(to_tsvector('english', COALESCE(NEW.state, '')), 'C') ||
                    setweight(to_tsvector('english', COALESCE(NEW.source, '')), 'D');
                RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;
            """,
            reverse_sql="""
            DROP FUNCTION IF EXISTS resource_search_vector_update();
            """,
        ),
        
        # Create trigger to automatically update search vector
        migrations.RunSQL(
            sql="""
            CREATE TRIGGER resource_search_vector_update
                BEFORE INSERT OR UPDATE ON directory_resource
                FOR EACH ROW EXECUTE FUNCTION resource_search_vector_update();
            """,
            reverse_sql="""
            DROP TRIGGER IF EXISTS resource_search_vector_update ON directory_resource;
            """,
        ),
        
        # Populate search vector for existing records
        migrations.RunSQL(
            sql="""
            UPDATE directory_resource 
            SET search_vector = 
                setweight(to_tsvector('english', COALESCE(name, '')), 'A') ||
                setweight(to_tsvector('english', COALESCE(description, '')), 'B') ||
                setweight(to_tsvector('english', COALESCE(city, '')), 'C') ||
                setweight(to_tsvector('english', COALESCE(state, '')), 'C') ||
                setweight(to_tsvector('english', COALESCE(source, '')), 'D')
            WHERE is_deleted = 0;
            """,
            reverse_sql="",
        ),
    ]
